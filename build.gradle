plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'

    id 'com.google.cloud.tools.jib' version '3.3.2'
}

group = 'com.yeom'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.7.2'

    // DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql' // 최신 버전으로 변경 가능

    //롬복
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs '-Xshare:off' // JVM 아규먼트 설정
}

// JAR 파일 이름 설정
bootJar {
    archiveBaseName = 'dex-rss'
    archiveVersion = '0.0.1'
}

jib {
    from {
        image = 'gradle:8.11-jdk17' // Stage 1: Gradle 빌드 환경
    }
    to {
        image = 'docker.io/hwyeom/dex-rss-test:latest' // Docker Hub에 푸시할 이미지
        auth {
            username = project.findProperty("dockerHubUsername") ?: System.getenv("DOCKER_HUB_USERNAME")
            password = project.findProperty("dockerHubPassword") ?: System.getenv("DOCKER_HUB_PASSWORD")
        }
    }
    container {
        workingDirectory = '/app' // WORKDIR /app
        entrypoint = ['java', '-jar', 'app.jar'] // ENTRYPOINT ["java", "-jar", "app.jar"]
        ports = ['8080'] // EXPOSE 8080
    }
    extraDirectories {
        paths {
            path {
                from = file("$buildDir/libs")
                into = '/app'
            }
        }
    }
}